services:
  api:
    image: support_ticket_api_image
    container_name: support_ticket_api
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - support_ticket_network
    ports:
      - ${APP_PORT}:3000
    stop_signal: SIGINT
    logging:
      driver: json-file
      options:
        max-size: 200k
        max-file: 10

  postgres:
    image: postgres:17-alpine
    container_name: support_ticket_postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - support_ticket_postgres_volume:/var/lib/postgresql/data
    networks:
      - support_ticket_network
    ports:
      - ${DB_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: 200k
        max-file: 10

networks:
  support_ticket_network:
    name: support_ticket_network
    driver: bridge

volumes:
  support_ticket_postgres_volume:
    name: support_ticket_postgres_volume